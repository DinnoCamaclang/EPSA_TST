{"programModules":{"EXT204MI":{"program":"EXT204MI","triggers":{},"transactions":{"UpdScoreReport":{"sourceUuid":"39d95a1f-cbbc-4251-b878-7ccdcdfcc1f1","name":"UpdScoreReport","program":"EXT204MI","description":"UpdScoreReporting","active":true,"multi":false,"modified":1729044619689,"modifiedBy":"WAK1","outputFields":[],"inputFields":[{"name":"CONO","description":"company","length":3,"mandatory":false,"type":"N"},{"name":"DIVI","description":"division","length":3,"mandatory":false,"type":"A"},{"name":"ITNO","description":"item number","length":15,"mandatory":false,"type":"A"},{"name":"SERN","description":"serial number","length":20,"mandatory":false,"type":"A"},{"name":"CRDT","description":"creation date","length":8,"mandatory":false,"type":"N"},{"name":"RETY","description":"transaction type","length":2,"mandatory":false,"type":"A"},{"name":"ALET","description":"sale type","length":1,"mandatory":false,"type":"A"},{"name":"PRWO","description":"principle work","length":3,"mandatory":false,"type":"A"},{"name":"DISH","description":"dist channel","length":1,"mandatory":false,"type":"A"},{"name":"APCO","description":"application code","length":1,"mandatory":false,"type":"A"},{"name":"DECD","description":"delivery code","length":10,"mandatory":false,"type":"A"},{"name":"HRTZ","description":"hertz code","length":6,"mandatory":false,"type":"A"},{"name":"SMTX","description":"salesperson","length":40,"mandatory":false,"type":"A"},{"name":"SPFO","description":"spar  focus code","length":6,"mandatory":false,"type":"A"},{"name":"FUEL","description":"fuel code","length":6,"mandatory":false,"type":"A"}],"utilities":[],"market":"ALL"}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"39d95a1f-cbbc-4251-b878-7ccdcdfcc1f1":{"uuid":"39d95a1f-cbbc-4251-b878-7ccdcdfcc1f1","updated":1729044607515,"updatedBy":"WAK1","created":1728538274041,"createdBy":"WAK1","apiVersion":"0.9","beVersion":"16.0.0.20240816161447.8","language":"GROOVY","codeHash":"D94D47923E3095B8B4C63F8C0D19A70C227122EE15DCCBE6A603FB076A6165B8","code":""}}}